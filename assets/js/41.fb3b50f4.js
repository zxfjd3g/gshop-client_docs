(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{400:function(t,a,s){"use strict";s.r(a);var n=s(40),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"day02"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day02"}},[t._v("#")]),t._v(" day02")]),t._v(" "),s("h2",{attrs:{id:"今日任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#今日任务"}},[t._v("#")]),t._v(" 今日任务")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1). Home组件及其子组件(静态)\n2). 后台接口与使用postman测试接口\n3). axios二次封装与接口请求函数封装\n4). 使用vuex管理组件状态数据\n5). TypeNav组件动态展现\n6). TypeNav纯前台(与用户)交互效果\n")])])]),s("h2",{attrs:{id:"home组件及其子组件-静态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#home组件及其子组件-静态"}},[t._v("#")]),t._v(" Home组件及其子组件(静态)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1). TypeNav: 3级分类导航\n2). ListContainer: 包含轮播列表的容器\n3). TodayRecommend: 今日推荐\n4). Rank: 排行\n5). Like: 猜你喜欢\n6). Floor: 楼层\n7). Brand: 品牌\n注意: 图片\n")])])]),s("h2",{attrs:{id:"后台接口与使用postman测试接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后台接口与使用postman测试接口"}},[t._v("#")]),t._v(" 后台接口与使用postman测试接口")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1). 启动 ===> 选择登陆==> cancel ===> 进入主界面\n2). 输入url/参数进行请求测试\n3). 注意post请求体参数需要指定为json格式(后台只支持json格式, 不支持urlencoding)\n4). 保存测试接口 ==> 后面可以反复使用\n")])])]),s("h2",{attrs:{id:"ajax与后台进行交互"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax与后台进行交互"}},[t._v("#")]),t._v(" ajax与后台进行交互")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("下载依赖包: npm install axios nprogress")])]),t._v(" "),s("li",[s("p",[t._v("axios的二次封装(axios本身就是对XHR原生ajax的封装)     面试必说")])])]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("封装通用的基础与超时时间")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("axios.create({\n\tbaseURL: '/api',\n\ttimeout: 200000\n})\n")])])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("显示请求进度条效果: nprogress")])]),t._v(" "),s("p",[t._v("显示进度: 在请求拦截器中: NProgress.start()")]),t._v(" "),s("p",[t._v("隐藏进度: 在响应拦截器成功和失败的回调中: NProgress.done()")])]),t._v(" "),s("li",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("请求成功得到不再是response, 而是response.data (响应体数据)")])]),t._v(" "),s("p",[t._v("在响应拦截器成功的回调中: return response.data")])]),t._v(" "),s("li",[s("ol",{attrs:{start:"4"}},[s("li",[t._v("请求出错, 做统一的错误提示, 让特定请求还可以对错误做特定处理")])]),t._v(" "),s("p",[t._v("在响应拦截器失败的回调中:")]),t._v(" "),s("p",[t._v("提示错误: alert(error.message)")]),t._v(" "),s("p",[t._v("抛出error: throw error")])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("接口请求函数模块")]),t._v(" "),s("p",[t._v("包含项目中所有接口对应的ajax请求函数")]),t._v(" "),s("p",[t._v("函数的返回值是promise, 函数内部调用ajax模块发请求")]),t._v(" "),s("p",[t._v("需要掌握一个技能: 根据接口文档, 定义接口请求函数")])]),t._v(" "),s("li",[s("p",[t._v("测试调用接口请求函数获取数据")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("出404错误")]),t._v(" "),s("ul",[s("li",[t._v("axios配置请求地址: /api/product/getBaseCategoryList")]),t._v(" "),s("li",[t._v("发请求所在的基础url: http://localhost:8080")]),t._v(" "),s("li",[t._v("http://localhost:8080/api/product/getBaseCategoryList(没有处理, 就404)")]),t._v(" "),s("li",[t._v("后台接口的地址: http://39.99.186.36/api/product/getBaseCategoryList(没有处理)")])])]),t._v(" "),s("li",[s("p",[t._v("解决办法1: 使用CORS解决ajax请求跨域")]),t._v(" "),s("ul",[s("li",[t._v("给axios指定正确的地址: baseURL: http://39.99.186.36/api")]),t._v(" "),s("li",[t._v("这样ajax请求就跨域了: 服务器返回特别的响应头")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Origin: http://localhost:8080")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Credentials: true")])])]),t._v(" "),s("li",[s("p",[t._v("解决办法2: 使用代理服务器   开发中用得比较多")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("配置代理服务器:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("devServer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只对请求路由以/api开头的请求进行代理转发")]),t._v("\n            target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://39.99.186.36'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转发的目标url")]),t._v("\n            changeOrigin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 支持跨域")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("配置baseURL: baseURL: '/api'")])])])])]),t._v(" "),s("h2",{attrs:{id:"axios发请求内部流程-理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#axios发请求内部流程-理解"}},[t._v("#")]),t._v(" axios发请求内部流程(理解)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("service.get('/xxx').then(\n\tresult => { // 接收到是响应拦截器成功回调返回的结果\n        \n    },\n    error => { // 接收到是响应拦截器失败回调抛出的error\n        \n    }\n)\n\nget内部执行\n\n    Promise.resolve(config)\n    .then((config) => {  // 请求拦截器\n        return config\n    })\n    .then((config) => { // 发异步ajax\n        return new Promise((resolve, reject) => {\n            根据config使用xhr发ajax请求\n\n            // 如果成功了, 创建response对象\n            resolve(response)\n            // 如果失败了, 创建error对象\n            reject(error)\n\n        })\n    })\n    .then(\n        (response) => { // 响应拦截器成功的回调\n            return response.data\n        },\n        (error) => {  // 响应拦截器失败的回调\n           throw error\n        }\n    )\n\n")])])]),s("h2",{attrs:{id:"使用vuex管理组件状态数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用vuex管理组件状态数据"}},[t._v("#")]),t._v(" 使用vuex管理组件状态数据")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" vuex用来做什么"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n    vuex用来管理多个组件共享的状态数据\n    从后台动态获取数据\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" vuex的基本使用\n    store相关"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" mutations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" actions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" getters \n    注册store"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vm中注册store  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 组件中通过$store得到store对象\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getters\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("actionName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutationName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    组件"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  通过$store来读取或更新vuex管理的state数据\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("也可以通过mapState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapGetters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapMutations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapActions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" vuex的多模块编程的必要性\n    vuex单模块问题"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 需要的管理状态数据比较多"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 那对应的mutations"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("actions模块就会变得比较大\n        如果添加新的数据管理"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("需要修改现在文件")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("不断向其添加内容"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    vuex多模块编程"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 对各个功能模块的数据分别进行管理"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 这样更加具有扩展性\n    什么时候需要用vuex多模块编程"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("  需要vuex管理的数据比较多时使用\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 多模块编程的总state结构"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        home"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            categoryList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 分类列表")]),t._v("\n            xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            yyy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'atguigu'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            userInfo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 针对三级分类使用vuex管理\n  a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" api\n  \t接口请求函数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" reqCategoryList\n  b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" vuex   home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n  \tstate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" categoryList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  \tmutations"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RECEIVE_CATEGORY_LIST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" categoryList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \taction"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  \t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCategoryList")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发异步ajax请求, 获取数据")]),t._v("\n  \t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reqCategoryList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果成功了, 取出数据, 提交给mutation")]),t._v("\n  \t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RECEIVE_CATEGORY_LIST'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \tgetters\n  \n  c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" component\n  \t分发异步action"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getCategoryList'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t读取state数据"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n  \t\t$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("categoryList\n  \t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("categoryList")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("categoryList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t模板中动态显示\n  \t\tv"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("\n  \t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"分类列表的交互效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分类列表的交互效果"}},[t._v("#")]),t._v(" 分类列表的交互效果")]),t._v(" "),s("h3",{attrs:{id:"_1-点击分类项跳转到搜索界面-携带分类id与分类名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-点击分类项跳转到搜索界面-携带分类id与分类名称"}},[t._v("#")]),t._v(" 1) 点击分类项跳转到搜索界面, 携带分类id与分类名称")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("实现: 使用声明式路由导航\n问题: 显示太慢 \n原因:  <router-link>太多了, 产生的组件对象太多\n")])])]),s("h3",{attrs:{id:"_2-使用编程式导航代替声明式导航"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用编程式导航代替声明式导航"}},[t._v("#")]),t._v(" 2) 使用编程式导航代替声明式导航")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("好处: 显示更快\n原因: 不用再产生router-link的组件对象\n问题: 每个分类项都绑定了点击监听, 数量太多  ==> 能不能只绑定一个监听\n")])])]),s("h3",{attrs:{id:"_3-使用事件委托-委派-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用事件委托-委派-代理"}},[t._v("#")]),t._v(" 3) 使用事件委托/委派/代理")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("给所有的分类项的父元素绑定点击监听, 通过event.target得到分类项\n好处: 只用绑定一个点击监听了, 提高事件处理效率\n问题: 不知道你点击的是哪个分类项(也就是它的数据)\n")])])]),s("h3",{attrs:{id:"_4-使用标签的data自定义属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用标签的data自定义属性"}},[t._v("#")]),t._v(" 4) 使用标签的data自定义属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("解决"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 携带分类数据\n编码"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t在每个分类项的a标签上使用 data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xxx属性来携带分类"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("与分类name数据\n\t在点击回调中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 通过event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataset中取出data自定义属性值")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("注意大小写"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);