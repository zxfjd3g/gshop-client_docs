(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{369:function(t,n,s){"use strict";s.r(n);var a=s(40),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_4-使用git管理项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用git管理项目"}},[t._v("#")]),t._v(" 4. 使用git管理项目")]),t._v(" "),s("h2",{attrs:{id:"_4-1-基本操作-一个分支master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-基本操作-一个分支master"}},[t._v("#")]),t._v(" 4.1. 基本操作(一个分支master)")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 1). 创建本地仓库(代码在本地仓库中)")]),t._v("\n    创建.gitignore文本, 并配置好\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init app"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 2). 创建远程仓库")]),t._v("\n    New Repo\n    指定仓库名\n    创建\t\t\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 3). 将本地仓库的代码推送到远程仓库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin url "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("在本地记录远程仓库的地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 4). 如果本地代码有修改, 要提交到本地仓库, 推送到仓库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global credential.helper store "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("记住用户和密码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 5). 如果远程代码有修改, 要拉取到本地仓库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 6). 将远程仓库的代码clone到本地(生成仓库)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone url\n")])])]),s("h2",{attrs:{id:"_4-2-多分支操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-多分支操作"}},[t._v("#")]),t._v(" 4.2. 多分支操作")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 1). 创建本地开发分支, 并推送到远程")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b dev\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin dev\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 2). 创建本地个人分支(不用推送到远程)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b xfzhang\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 3). 在个人分支上开发, 合并到dev分支并推送")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge xfzhang\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 4). 根据远程dev分支创建本地dev分支")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如果分支是在clone后创建的才需要执行"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b dev origin/dev\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 5). 将dev分支合并到master")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);