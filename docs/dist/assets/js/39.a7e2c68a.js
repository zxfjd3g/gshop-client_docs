(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{396:function(t,a,s){"use strict";s.r(a);var e=s(40),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"组件间通信详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信详解"}},[t._v("#")]),t._v(" 组件间通信详解")]),t._v(" "),s("h2",{attrs:{id:"_1-组件间多种通信方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-组件间多种通信方式"}},[t._v("#")]),t._v(" 1. 组件间多种通信方式:")]),t._v(" "),s("ol",[s("li",[t._v("组件间通信1: props")]),t._v(" "),s("li",[t._v("组件间通信2: vue自定义事件")]),t._v(" "),s("li",[t._v("组件间通信3: 事件总线")]),t._v(" "),s("li",[t._v("组件间通信4: v-model")]),t._v(" "),s("li",[t._v("组件间通信5: .sync 属性修饰符")]),t._v(" "),s("li",[t._v("组件间通信6: $attrs与$listeners")]),t._v(" "),s("li",[t._v("组件间通信7: $children与$parent")]),t._v(" "),s("li",[t._v("组件间通信8: provide与inject")]),t._v(" "),s("li",[t._v("组件间通信9: vuex")]),t._v(" "),s("li",[t._v("组件间通信10: 作用域插槽slot-scope")])]),t._v(" "),s("h2",{attrs:{id:"_2-组件间通信最基本方式-props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件间通信最基本方式-props"}},[t._v("#")]),t._v(" 2. 组件间通信最基本方式: props")]),t._v(" "),s("ul",[s("li",[t._v("用来实现父子之间相互通信的最基本方式, 也是用得最多的方式\n"),s("ul",[s("li",[t._v("父 ==> 子, 传递的是非函数类型的属性")]),t._v(" "),s("li",[t._v("子 ==> 父, 传递的是函数类型的属性")])])]),t._v(" "),s("li",[t._v("问题: 其它关系的组件使用props就会比较麻烦")])]),t._v(" "),s("h2",{attrs:{id:"_3-组件间通信2-vue自定义事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-组件间通信2-vue自定义事件"}},[t._v("#")]),t._v(" 3. 组件间通信2: vue自定义事件")]),t._v(" "),s("h3",{attrs:{id:"_1-原生dom事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-原生dom事件"}},[t._v("#")]),t._v(" 1) 原生DOM事件")]),t._v(" "),s("ul",[s("li",[t._v("绑定原生DOM事件监听的2种情况\n"),s("ul",[s("li",[t._v("在html标签上绑定DOM事件名的监听")]),t._v(" "),s("li",[t._v("在组件标签上绑定DOM事件名的监听, 事件绑定在组件的根标签上")])])]),t._v(" "),s("li",[t._v("当用户操作对应的界面时, 浏览器就会自动创建并封闭包含相关数据的事件对象, 分发对应的事件, 从而触发事件监听回调函数调用")]),t._v(" "),s("li",[t._v('事件对象event, 本质是 "事件数据对象"')]),t._v(" "),s("li",[t._v("event对象内的数据属性: target / offsetX / offsetY / keyCode等")]),t._v(" "),s("li",[t._v("$event就是浏览器创建的event对象, 默认传递给事件监听回调函数的就是它")])]),t._v(" "),s("h3",{attrs:{id:"_2-vue自定义事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue自定义事件"}},[t._v("#")]),t._v(" 2) vue自定义事件")]),t._v(" "),s("ul",[s("li",[t._v("绑定vue自定义事件监听\n"),s("ul",[s("li",[t._v("只能在组件标签上绑定")]),t._v(" "),s("li",[t._v("事件名是任意的, 可以与原生DOM事件名相同")])])]),t._v(" "),s("li",[t._v("只有当执行$emit('自定义事件名', data)时分发自定义事件, 才会触发自定义事件监听函数调用")]),t._v(" "),s("li",[t._v("$event: 就是分发自定义事件时指定的data数据")]),t._v(" "),s("li",[t._v("$event可以是任意类型, 甚至可以没有")]),t._v(" "),s("li",[t._v("用来实现子向父组件通信, 功能相当于函数类型的props")])]),t._v(" "),s("h2",{attrs:{id:"_4-组件间通信3-事件总线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-组件间通信3-事件总线"}},[t._v("#")]),t._v(" 4. 组件间通信3: 事件总线")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("理解:")]),t._v(" "),s("ul",[s("li",[t._v("Vue原型对象上有3个事件处理的方法: $on() / $emit() / $off()")]),t._v(" "),s("li",[t._v("组件对象的原型对象的原型对象是Vue的原型对象: 组件对象可以直接访问Vue原型对象上的方法")])])]),t._v(" "),s("li",[s("p",[t._v("实现任意组件间通信")])]),t._v(" "),s("li",[s("p",[t._v("编码实现:")]),t._v(" "),s("ul",[s("li",[t._v("将入口js中的vm作为全局事件总线对象:")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("分发事件/传递数据的组件: this.$bus.$emit('eventName', data)")])]),t._v(" "),s("li",[s("p",[t._v("处理事件/接收数据的组件: this.$bus.$on('eventName', (data) => {})")])])]),t._v(" "),s("h2",{attrs:{id:"_5-组件间通信4-v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-组件间通信4-v-model"}},[t._v("#")]),t._v(" 5. 组件间通信4: v-model")]),t._v(" "),s("h3",{attrs:{id:"_1-原生input上的本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-原生input上的本质"}},[t._v("#")]),t._v(" 1) 原生input上的本质:")]),t._v(" "),s("p",[t._v("动态的value属性与原生input事件监听")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name2=$event.target.value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-组件标签上的本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件标签上的本质"}},[t._v("#")]),t._v(" 2) 组件标签上的本质:")]),t._v(" "),s("p",[t._v("动态的value属性与自定义input事件监听")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件: ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CustomInput "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name4"')]),t._v(" @input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name4=$event"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件")]),t._v("\nprops"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v(" @input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"$emit('input', $event.target.value)\"")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-利用v-model能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-利用v-model能做什么"}},[t._v("#")]),t._v(" 3) 利用v-model能做什么?")]),t._v(" "),s("ul",[s("li",[t._v("v-model不仅能实现原生标签上的"),s("strong",[t._v("双向数据绑定")]),t._v(", 也能实现父子组件间数据"),s("strong",[t._v("双向通信(同步)")])]),t._v(" "),s("li",[t._v("应用\n"),s("ul",[s("li",[t._v("一般用于封装带表单项的复用性组件")]),t._v(" "),s("li",[t._v("elment-ui中: Input/CheckBox/Radio/Select等表单项组件都封装了v-model")])])])]),t._v(" "),s("h2",{attrs:{id:"_6-组件间通信5-sync-属性修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-组件间通信5-sync-属性修饰符"}},[t._v("#")]),t._v(" 6. 组件间通信5: sync 属性修饰符")]),t._v(" "),s("h3",{attrs:{id:"_1-理解本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解本质"}},[t._v("#")]),t._v(" 1) 理解本质:")]),t._v(" "),s("p",[t._v("绑定一个自定义事件监听, 用来接收子组件分发事件携带的最新数据来更新父组件的数据")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":money.sync")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":money")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("@update:")]),t._v("money")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("total=$event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-利用sync能做什么呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-利用sync能做什么呢"}},[t._v("#")]),t._v(" 2) 利用sync能做什么呢?")]),t._v(" "),s("ul",[s("li",[t._v("在原有父向子的基础上加上子向父通信")]),t._v(" "),s("li",[t._v("应用\n"),s("ul",[s("li",[t._v("常用于封装可复用组件(需要更新父组件数据)\n"),s("ul",[s("li",[t._v("v-model一般用于带表单项的组件")]),t._v(" "),s("li",[t._v("sync一般用于不带表单项标签的组件")])])]),t._v(" "),s("li",[t._v("element-ui中: Dialog就利用sync来实现组件的隐藏")])])])]),t._v(" "),s("h2",{attrs:{id:"_7-组件间通信6-attrs与-listeners"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-组件间通信6-attrs与-listeners"}},[t._v("#")]),t._v(" 7. 组件间通信6: $attrs与$listeners")]),t._v(" "),s("h3",{attrs:{id:"_1-理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解"}},[t._v("#")]),t._v(" 1) 理解:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("$attrs: 排除props声明, class, style的所有组件标签属性组成的对象")])]),t._v(" "),s("li",[s("p",[t._v("$listeners: 级组件标签绑定的所有自定义事件监听的对象")])]),t._v(" "),s("li",[s("p",[t._v("v-bind: 的特别使用")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-bind")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ id: someProp, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("other-attr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(": otherProp }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("v-on: 的特别使用:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-on")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ mousedown: doThis, mouseup: doThat }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("一般: v-bind与$attrs配合使用, v-on与$listeners配合使用")])])]),t._v(" "),s("h3",{attrs:{id:"_2-使用它们能做什么呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用它们能做什么呢"}},[t._v("#")]),t._v(" 2) 使用它们能做什么呢?")]),t._v(" "),s("ul",[s("li",[t._v("在封装可复用组件时: HintButton\n"),s("ul",[s("li",[t._v("从父组件中接收不定数量/名称的属性或事件监听")]),t._v(" "),s("li",[t._v("在组件内部, 传递给它的子组件")])])]),t._v(" "),s("li",[t._v("element-ui中: Input就使用了v-bind与$attrs来接收不定的属性传递给input")])]),t._v(" "),s("h3",{attrs:{id:"_3-扩展双击监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-扩展双击监听"}},[t._v("#")]),t._v(" 3) 扩展双击监听:")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v('@dblclick="add2"')]),t._v("\n绑定是自定义事件监听, 而el-button内部并没处理(没有绑定对应的原生监听, 没有分发自定义事件)\n双击时, 不会有响应")])]),t._v(" "),s("li",[s("p",[s("code",[t._v('@dblclick.native="add2"')]),t._v("\n绑定的是原生的DOM事件监听, 最终是给组件的根标签a绑定的原生监听\n当双击a内部的button能响应, 因为事件有冒泡")])])]),t._v(" "),s("h2",{attrs:{id:"_8-组件间通信7-children与-parent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-组件间通信7-children与-parent"}},[t._v("#")]),t._v(" 8. 组件间通信7: $children与$parent")]),t._v(" "),s("h3",{attrs:{id:"_1-理解-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解-2"}},[t._v("#")]),t._v(" 1) 理解:")]),t._v(" "),s("ul",[s("li",[t._v("$children: 所有直接子组件对象的数组, 利用它可以更新多个子组件的数据")]),t._v(" "),s("li",[t._v("$parent: 父组件对象, 从而可以更新父组件的数据")]),t._v(" "),s("li",[t._v("$refs: 包含所有有ref属性的标签对象或组件对象的容器对象")])]),t._v(" "),s("h3",{attrs:{id:"_2-利用它们能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-利用它们能做什么"}},[t._v("#")]),t._v(" 2) 利用它们能做什么?")]),t._v(" "),s("ul",[s("li",[t._v("能方便的得到子组件/后代组件/父组件/祖辈组件对象, 从而更新其data或调用其方法")]),t._v(" "),s("li",[t._v("官方建议不要大量使用, 优先使用props和event")]),t._v(" "),s("li",[t._v("在一些UI组件库定义高复用组件时会使用$children和$parent, 如Carousel组件")])]),t._v(" "),s("h3",{attrs:{id:"_3-扩展-mixin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-扩展-mixin"}},[t._v("#")]),t._v(" 3) 扩展: mixin")]),t._v(" "),s("ul",[s("li",[t._v("多个组件有部分相同的js代码如何复用 ?")]),t._v(" "),s("li",[t._v("答: 利用vue的mixin技术实现")]),t._v(" "),s("li",[t._v("本质: 实现Vue组件的JS代码复用, 简化编码的一种技术")])]),t._v(" "),s("h2",{attrs:{id:"_9-组件间通信8-provide与inject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-组件间通信8-provide与inject"}},[t._v("#")]),t._v(" 9. 组件间通信8: provide与inject")]),t._v(" "),s("h3",{attrs:{id:"_1-理解-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解-3"}},[t._v("#")]),t._v(" 1) 理解")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("用来实现祖孙组件直接通信\n在祖组件中通过provide配置向后代组件提供数据\n在后代组件中通过inject配置来读取数据\n")])])]),s("h3",{attrs:{id:"_2-注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-注意"}},[t._v("#")]),t._v(" 2) 注意:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("不太建议在应用开发中使用, 一般用来封装vue插件\nprovide提供的数据本身不是响应式的 ==> 父组件更新了数据, 后代组件不会变化\nprovide提供的数据对象内部是响应式的 ==> 父组件更新了数据, 后代组件也会变化\n")])])]),s("h3",{attrs:{id:"_3-应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-应用"}},[t._v("#")]),t._v(" 3) 应用:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("element-ui中的Form组件中使用了provide和inject\n")])])]),s("h2",{attrs:{id:"_10-组件间通信9-vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-组件间通信9-vuex"}},[t._v("#")]),t._v(" 10. 组件间通信9: vuex")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("实现任意组件间通信")])]),t._v(" "),s("li",[s("p",[t._v("Vuex 是一个专为 Vue 应用程序设计的管理多组件共享状态数据的 Vue 插件\n任意组件都可以读取到Vuex中store的state对象中的数据")]),t._v(" "),s("p",[t._v("任意组件都可以通过dispatch()或commit()来触发store去更新state中的数据")]),t._v(" "),s("p",[t._v("一旦state中的数据发生变化, 依赖于这些数据的组件就会自动更新")])])]),t._v(" "),s("h2",{attrs:{id:"_11-作用域插槽slot-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-作用域插槽slot-scope"}},[t._v("#")]),t._v(" 11. 作用域插槽slot-scope")]),t._v(" "),s("h3",{attrs:{id:"_1-什么情况下使用作用域插槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么情况下使用作用域插槽"}},[t._v("#")]),t._v(" 1) 什么情况下使用作用域插槽?")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("父组件需要向子组件传递标签结构内容")])]),t._v(" "),s("li",[s("p",[t._v("但决定父组件传递怎样标签结构的数据在子组件中")])])]),t._v(" "),s("h3",{attrs:{id:"_2-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-编码"}},[t._v("#")]),t._v(" 2) 编码")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("!:")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("子组件:")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":row")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":$index")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("!:")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("父组件:")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("slot-scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{row, $index}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{$index+1}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"&nbsp;"}},[t._v("&nbsp;")]),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"&nbsp;"}},[t._v("&nbsp;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $index%2===1 ? "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{row.text}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-应用-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-应用-2"}},[t._v("#")]),t._v(" 3) 应用")]),t._v(" "),s("ul",[s("li",[t._v("对于封装列表之类的组件特别需要")]),t._v(" "),s("li",[t._v("element-ui中: Table组件中就用到了slot-scope")])])])}),[],!1,null,null,null);a.default=n.exports}}]);